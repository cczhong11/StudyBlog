<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Learn More</title>
    <link>http://study.tczhong.com/</link>
    <description>Recent content on Learn More</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 09 Jun 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://study.tczhong.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>每周分享第 1 期</title>
      <link>http://study.tczhong.com/post/sharing_1/</link>
      <pubDate>Sun, 09 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>http://study.tczhong.com/post/sharing_1/</guid>
      <description>每周分享第 1 期 2019 week 23 你永远会低估你一周可以做的事情，在这里记录一下我这周看到的好东西。
国内新闻 1 教育部发布2019年第1号留学预警
一段时间以来，中方部分赴美留学人员的签证受到限制，周期延长，有效期缩短，以及拒签率上升的情况，对中方留学人员赴美学习或在美顺利完成学业造成影响。教育部提醒广大学生和学者，需要在留学前加强风险评估，增强防范意识，做好相应的准备。
后续：美国大使馆
从大趋势来看，以后美国留学生会减少，前往欧洲和英联邦国家留学生会增多
2 外交部发布赴美安全提醒
外交部4日下午发布赴美安全提醒。提醒指出，近期，美国执法机构多次采取出入境盘查、上门约谈等多种方式骚扰赴美中国公民。外交部和中国驻美国使领馆提醒赴美国中国公民和在美中资机构提高安全意识，注意加强防范，妥善积极应对。如遇紧急情况，请及时与中国驻美国使领馆联系寻求协助。本提醒有效期至2019年12月31日。
旅游团必然会少发，旅游业受挫，包括美国的华人旅行社
3 中国90后企业家称456.7888万美元拍下巴菲特午餐
据证券时报消息 6月4日，“波场TRON”创始人孙宇晨在个人微博上宣布，成为第二十届“巴菲特慈善午餐”的最终竞拍赢家，以创记录高价456.7888万美元拍下“巴菲特慈善午餐”，孙宇晨也将成为全球首个与巴菲特共进午餐的90后企业家。孙宇晨在个人微博中表示，自己是巴菲特价值投资理念的信仰者，希望邀请区块链业内知名人士一起与巴菲特交流，从而“增进顶级传统投资人与数字货币的理解与友谊”。巴菲特此前曾抨击过比特币没有投资价值。
后续：忘不了王小川看骗子的眼神 个人履历
知乎问答
这是一个很会炒作自己的人，被称作币圈贾跃亭。也就比我大一点，能做到这些成就还是很令人佩服的，但也不知可以走多远。
4 中俄关系提升为“新时代全面战略协作伙伴关系”
习近平5日对俄罗斯进行国事访问，与俄总统普京会晤并签署了多项协议，包括将两国关系上升为“新时代全面战略协作伙伴关系”，并宣示两国将共同“加强当代全球战略稳定”。在会谈中，习近平呼吁两国积极参与国际事务和全球治理；中方愿同俄方携手努力，不断放大两国高水平政治关系的积极效应，在国际事务中贡献更多“中俄方案”。习近平还表示，他与普京签署了两项重要声明：一是《关于发展新时代全面战略协作伙伴关系的联合声明》，宣布发展中俄新时代全面战略协作伙伴关系，在两国建交70周年之际，赋予双边关系新的定位和内涵。二是《关于加强当代全球战略稳定的联合声明》，宣示两国共同维护全球战略稳定，体现中俄的担当精神和两国战略协作的积极效应，这在当前具有特殊重要意义。
“战略协作”指除“战略合作”的内容外，双方还在军事技术等方面协作互助。wiki
普京7日在圣彼得堡国际经济论坛全体会议期间说，俄中两国并非建立军事同盟，而是战略盟友。俄中在国际舞台上的合作是国际事务中最重要的稳定因素。普京说，目前俄罗斯与中国是真正意义上的战略伙伴。普京当天在回答“俄中贸易关系能否替代俄罗斯与西方国家的经济关系”的问题时表示，没有必要用俄罗斯和西方的关系与俄中伙伴关系相比较。俄中并非建立军事同盟，而是战略盟友，双方并不针对任何国家。双方为了自己和合作伙伴国家的利益而努力，并不准备替换或者取代任何一方。
5 中国政府将赋予国企更大自主决策权以提高效率
国资委周三称，大型国有企业将能够就混合所有制改革、资产重组、人员招聘和绩效评估等事宜自主决策。国资委称，其职能将从管企业向管资本转变。
@数据总站：
来，我来给你们讲讲理直气壮做大做强国企，到底意味着什么。（以下数据源于国家统计局月度数据库，净资产数据没有直接统计，计算方式为数据库中的企业总资产-总负债。由于没有直接统计，反而相对精准。）
各位必须先了解一个基本概念：工业企业将利润再投资于生产，乃是理所应当受到鼓励的。现代工业尤其需要这种再投资，稍微像样一点的企业，生产线两三年不更新，基本上就处于被行业淘汰的境况了。一般而言，企业将其一半的利润用于再投资，是非常合理的。基于这样的考虑，我们分别考察民企、外企和国企的利润转化为净资产率，也就是利润再投资率，就可以清晰的了解这些企业是打算长久的经营下去，还是已经做好了跑路的准备：没有了利润再投资，基本上就是要跑路了。
6 我国将建立国家技术安全管理清单制度
新华社记者从国家发展改革委获悉，根据《国家安全法》等相关法律法规，国家发展改革委正牵头组织研究建立国家技术安全管理清单制度，以更有效预防和化解国家安全风险。具体措施将于近期出台
国际大事 1 美国对墨西哥增加关税 墨西哥或进行报复
墨西哥资深官员4日说，针对美国可能对墨西哥商品加征关税，他们正在衡量不同的应对方法，其中包括报复性关税。特朗普上周四宣布从6月10日开始，对所有墨西哥进口的产品征收5%关税，直到经墨西哥进入美国的非法移民停止涌入为止。而且，直到这件事情解决之前，他会继续增加高达25%的关税。墨西哥外长埃布拉德在墨西哥驻华盛顿大使馆接受媒体访问时说：“这些关税对美国经济、美国和墨西哥经济体的消费者而言，会非常昂贵。”他还说，经济上的危机会让墨西哥更难控制非法移民。墨西哥经济部长瓜哈尔多说，如果美国对墨西哥商品增加关税，他们“有好几条路可选”，来进行报复。
当地时间7日晚，美国总统特朗普在推特上发文宣布，美国和墨西哥已经签署了一项协议，原定于10日对墨西哥所有输美产品加征5%关税的计划“无限期暂停”。“反过来，墨西哥同意采取强有力措施阻止移民潮经墨西哥到达我们南部边境。这样做事为了大大减少或消除来自墨西哥的非法移民进入美国。国务院很快将发布协议细节。”特朗普还补充说。
2 中美摩擦影响 全球半导体市场或缩小12％
受中美贸易战影响，半导体市场减速日益明显，世界半导体贸易统计组织预测，半导体市场2019年或缩小12％。日经新闻网报道，由主要半导体厂商组成的世界半导体贸易统计组织（WSTS）6月4日发布预测称，2019年的市场规模为4120亿美元，同比缩小12％。在2018年秋季的上次预测中，该组织曾认为市场将增长2.6％。该组织认为，由于中美贸易摩擦等影响，经济不确定性加强，电子产品等需求将下滑。作为下调预测的理由，世界半导体贸易统计组织列举了中美贸易摩擦、英国脱欧等世界局势变化、以及智能手机需求接近饱和等。
3 英首相特雷莎梅正式辞去党魁一职
英国首相特雷莎梅正式辞去执政党保守党领导人一职。她将继续留任首相，直到新首相产生。英国首相府发言人7日表示，特雷莎梅当日尚无任何发表公开声明或举行新闻发布会的安排。特雷莎梅将继续担任保守党代理党魁，直至新的党领袖产生。英国此前与欧盟达成的“脱欧”协议已三次遭英国议会下院投票否决。为打破“脱欧”僵局，特雷莎梅上月承诺提前卸任。根据规定，首相卸任后将由执政党选举产生的新领导人接替。新首相人选需经女王批准，任期至下次大选。保守党新领导人选举程序将于10日正式启动。新领导人将通过多轮党内选举产生，预计胜出者将在7月底产生。
4 日本去年新生人数创新低 连续三年不足百万
日本厚生劳动省7日发布数据，显示日本2018年新出生91.8万人，连续三年不足100万，创历史新低。数据显示，日本2018年总和生育率，即每名女性一生平均生育孩子数量是1.42，连续三年减少。从产妇年龄看，45岁以下产妇生育人口数量相比2017年减少，其中30岁至34岁产妇生育数量减少超过1万人。产妇生育头胎的平均年龄连续4年维持在30.7岁，晚育趋势没有改变。日本58.6万对夫妇2018年结婚，连续6年减少，是1945年以来最低数字
科技新闻 1 IEEE声明：解除对华为员工编辑和同行评审活动的限制
针对全球最大专业技术学会——电气和电子工程师协会（IEEE）先前限制华为员工及其资助的个人参与审稿一事，IEEE 3日发表双语声明表示，解除对华为员工编辑和同行评审活动的限制。声明称，华为及其子公司的员工可以参加IEEE出版过程的同行评审和编辑工作。所有IEEE会员都可以继续正常参与IEEE的全部活动，无论他们的雇主是谁。声明还表示，此前限制性的做法完全是为了保护其志愿者和会员，规避相关的法律风险。在收到相关说明后，法律风险得以解除。
2 工信部正式发放5G牌照
据央视新闻 6 月 6 日消息，工信部今日向中国电信、中国移动、中国联通、中国广电发放 5G 商用牌照，这意味着中国正式进入 5G 商用元年。</description>
    </item>
    
    <item>
      <title>Root红米手机以及获取微信聊天记录</title>
      <link>http://study.tczhong.com/post/tech/wechathistory/</link>
      <pubDate>Tue, 04 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>http://study.tczhong.com/post/tech/wechathistory/</guid>
      <description>本文记录了自己在root已停止支持的红米手机以及破解加密微信聊天记录数据库的一些心得和体会。
root 手机 Root小米手机分为以下几步：
 刷miui的开发者版本 解锁小米手机 开启root权限  我手里有一部红米3的手机，而小米官方对于这款手机已经停止了维护，所以在miui官网上已经找不到相应的卡刷包。解决办法就是上论坛下以往的，我找到的在这里。
我先下载了卡刷包，之后把zip包直接放到sd卡里。在系统更新页面点击右上角，选择使用本地文件进行更新。注意这里会抹掉所有手机的应用，在漫长的等待之后就把自己miui版本变成了开发版。
接下来首先打开开发者模式，运许usb调试，打开fastboot刷机模式。另外在授权管理里面找root授权管理，把自己的手机与mi account绑定，准备解锁。
解锁手机这步在root小米手机还是很重要的，具体是解锁BootLoader，有不少教程都没有写这步，这应该是小米在近几年才加的。具体步骤也不难，就是从这里点击进去，下载相关的工具包，之后安装里面的驱动，让手机进入fastboot模式，运行软件解锁，然后手机会自动重启。
一开始我并不知道这一步的重要性，尝试了很久的线刷，结果总是显示 ”FAILED (remote: device is locked. Cannot flash images)“。最后才明白是这个问题。另外这个工具没有mac版，所以我的解决办法是运行windows虚拟机，在里面完成了解锁。
最后一步就比较简单了，直接到授权管理里开启root权限。之后在adb shell里面运行su就是root user了。
获得聊天记录 聊天记录存在的位置是 /data/data/com.tencent.mm/MicroMsg/xxxxxxx/EnMicroMsg.db。这里的xxxxx是对&amp;rdquo;mm[uin]&amp;ldquo;进行md5的值。uin的获得可以使用这个命令，cat /data/data/com.tencent.mm/shared_prefs/*.xml | grep uin，记录其中的default_uin。如果是1234567，那么就对mm1234567进行md5操作，之后就可以获得文件下的名字。
利用以下命令把内容拷贝出来。
cp EnMicroMsg.db /mnt/sdcard/ exit adb pull /mnt/sdcard/EnMicroMsg.db .  接下来就是要解密这个数据库。密码是手机的imei+uin，利用以下命令可以获得到：
echo -n $imei$uin | md5 | cut -c -7  打开这个加密的数据库我卡了很久，理论上利用sqlcipher就可以解锁了，但是我尝试了很多办法，结果都是&amp;rdquo;File is not a database&amp;rdquo;。说明你在解锁数据库用的方法错了，并不代表你的密码不对，在mac下利用brew install sqlcipher安装之后，利用以下命令即可。
sqlcipher EnMicroMsg.db &#39;PRAGMA key = &amp;quot;key&amp;quot;; PRAGMA cipher_migrate; ATTACH DATABASE &amp;quot;decrypted_database.</description>
    </item>
    
    <item>
      <title>Bit算法题的思考</title>
      <link>http://study.tczhong.com/post/algo/bit/</link>
      <pubDate>Fri, 21 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>http://study.tczhong.com/post/algo/bit/</guid>
      <description>bit操作题目思考 说实话这类题目比较考验智商，如果之前没有见过的话做出来的难度比较大。基本思路很多都是利用XOR解题
find bit parity 这题就是找奇偶校验位的值，有奇数个1就是1，有偶数个1就是0。在513 datalab出现过，现在在思考感觉没那么难了。基本思路就是把所有的1进行XOR，看最后是1还是0.
x ^= x &amp;gt;&amp;gt; 16 x ^= x &amp;gt;&amp;gt; 8 x ^= x &amp;gt;&amp;gt; 4 x ^= x &amp;gt;&amp;gt; 2 x ^= x &amp;gt;&amp;gt; 1 x &amp;amp;= 1;  找出2个只出现一次的数值 这个题目可以全部XOR，得到x XOR y。之后取其中一位，然后把数组分成2部分，一半有这位，一半没有，然后用前两题的思路。</description>
    </item>
    
    <item>
      <title>Linkedlist算法题的思考</title>
      <link>http://study.tczhong.com/post/algo/linkedlist/</link>
      <pubDate>Mon, 10 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>http://study.tczhong.com/post/algo/linkedlist/</guid>
      <description>链表题目的思考 链表是一个比较常见的数据结构，但是leetcode里的题目相对来说不多，题目也不是很难。最重要的思想就是递归的思路。对于每一个节点，都可以看作一个链表的起点。
merge 这类题目就是用一个递归函数，参数是两个头指针，得到新的指针之后，其中一个向后，然后再递归调用就可以。sort list就是一个merge sort的思想
 2. Add Two Numbers 21. Merge Two Sorted Lists 23. Merge k Sorted Lists 148. Sort List  cycle, two pointers 判断有没有环的题目可以使用快慢指针，当两个指针重新相遇的时候可以判断出现环。
删掉倒数节点可以使用两个指针，一个先走k个，之后两个一起走，快的那个到结尾的时候就说明慢指针指向那个节点是需要删除的。
找交点的题目也是两个节点，其实和找环的思路一样，不过是两个指针走到底了从另一边重新开始，基本思路就是两边走的路程一致。
 141. Linked List Cycle 142. Linked List Cycle II 19. Remove Nth Node From End of List 876. Middle of the Linked List 160. Intersection of Two Linked Lists 287. Find the Duplicate Number  reverse Reverse 的思想也比较简单，就是记得保存当前的下一个节点。反转链表的思路就是每次把最后一个节点放到表头。分组reverse的话就是链表的思路叠加，先找出前k个，后面的点就是同样的子问题，做完reverse之后就可以接上后面的点。</description>
    </item>
    
    <item>
      <title>Interval算法题的思考</title>
      <link>http://study.tczhong.com/post/algo/interval/</link>
      <pubDate>Sat, 08 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>http://study.tczhong.com/post/algo/interval/</guid>
      <description> INTERVAL 算法题目的思考 这类题目还是比较常见的。就是给你一些区间，需要你判断重叠之类的。相对来说不难，一些常见的方法是用按start的大小排序，之后end1&amp;lt;start2 就代表有重叠。
 56. Merge Intervals 57. Insert Interval 436. Find Right Interval 729. My Calendar I 731. My Calendar II 732. My Calendar III 253. Meeting Rooms II  </description>
    </item>
    
    <item>
      <title>DP算法题的思考</title>
      <link>http://study.tczhong.com/post/algo/dp/</link>
      <pubDate>Tue, 04 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>http://study.tczhong.com/post/algo/dp/</guid>
      <description>DP 算法题目的思考 dp全称是动态规划，是一类被人又喜欢又讨厌的题目。喜欢是因为找到递推关系之后题目就变得简单了，讨厌的原因是这类题目常常很难想到递推关系。
dp的核心思想就是把一个复杂的问题分解成简单的子问题，并且可以利用递推的方式来解决。所有dp题目的核心是：
 递推公式 deduction formula 初始化 initialization 空间优化 space improvement  路径数量 这类题目就是看有几种方式可以到这个点，然后把这几种方式的路径加起来就可以。这是自下而上的思想，对于青蛙跳的那道题也可以自上而下利用递归的思路解题。只要可以跳到，就可以变成一个子问题，把这个点当做起点来进行。
word break 这类题目就可以使用相同的思想。思路是判断前i个是否可以组成，之后就判断这从i到j是否是一个单词。如果要记录下来所有的组成可能的话就可以使用dfs了。
 62. Unique Paths 63. Unique Paths II 64. Minimum Path Sum 70. Climbing Stairs 91. Decode Ways 139. Word Break 198. House Robber 213. House Robber II 338. Counting Bits 357. Count Numbers with Unique Digits 403. Frog Jump 518. Coin Change 2 746. Min Cost Climbing Stairs 413. Arithmetic Slices 446.</description>
    </item>
    
    <item>
      <title>Stack算法题的思考</title>
      <link>http://study.tczhong.com/post/algo/stack/</link>
      <pubDate>Tue, 04 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>http://study.tczhong.com/post/algo/stack/</guid>
      <description>Stack 算法题的思考 这类题目也是比较多的，一般比较繁琐。思路类似DFS，不过可以不使用递归实现。
String 解析类 这类比较多的就是计算器，以及分析括号里的内容。例如解析 3[a]2[bc],这时候就可以在遇到[的时候把之前的东西都压到栈里，之后当遇到]的时候把内容再pop出来。
对于计算器，如果是后缀表达式的话，可以把结果都压到栈里，遇到运算符再pop出运算。有括号的话还是按括号的方法，主要要注意加法和乘法的区别。
计算器系列最重要的思想就是前一个符号看作大小的指示，之后那个才用来做计算。例如(1+2)+(3+4), +可以看作是是后一个括号的符号。对于1*2 + 6&amp;frasl;3,原理相同。在进行+6/3的时候，先把sign变成+6，并进行除法标记。之后再用除法。
 150. Evaluate Reverse Polish Notation 385. Mini Parser 394. Decode String 726. Number of Atoms 224. Basic Calculator 227. Basic Calculator II 770. Basic Calculator IV 772. Basic Calculator III  大小差距 还有一类题目就是问下一个比自己大的数还有多远，可以使用栈。栈里面存的都是比栈顶小的数，遇到比栈顶大的数n就可以弹出栈里的数j，因为这时我们可以知道比之前那个数j大的数在n了，更新之前那个数j的结果。
栈的作用存一个至今遇到的大值。栈底是最大的值，栈顶是至今遇到的大值里最小的。
for (int i = 0; i &amp;lt; n; i++) { while (!stack.isEmpty() &amp;amp;&amp;amp; temperatures[i] &amp;gt; temperatures[stack.peek()]) { int idx = stack.pop(); res[idx] = i - idx; } stack.</description>
    </item>
    
    <item>
      <title>Graph算法题的思考</title>
      <link>http://study.tczhong.com/post/algo/graph/</link>
      <pubDate>Tue, 28 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>http://study.tczhong.com/post/algo/graph/</guid>
      <description>graph 算法题目思考 Graph算是非常常见的题目，一般会给你一个2d array或一个数组代表联系，你可以使用这个输入来转换成一个图表示的数据结构，之后在图里做搜索。常见的算法：
 BFS，DFS union find A* Floyd and dijkstra  Leetcode里的题目的话主要都是dfs, bfs就可以解决，有些需要思考几个之间的关系的题目可以使用union find来做。少部分计算路径的题目需要使用一些基本的最短路径算法。
BFS and DFS BFS就是使用一个queue,每次在遍历一个点的时候就把这个点放到queue里，是一个FIFO的结构。一层一层的遍历，基本应用是在tree level 遍历。这种方法找最短路径比较好，问题是一次要走很多。相对来说，BFS和DFS都可以解决一道题目，区别只是遍历的顺序不同。 DFS需要使用stack来解决，或者递归。
 127. Word Ladder 130. Surrounded Regions 133. Clone Graph  对于找所有东西是不是一类的题目，经典题目就是看有几个岛的题目，利用dfs可以很方便的写出来。如果是无向图的话，从区域里的任意一点应该是可以到这个区域里任意一点的。所以只要有这个就可以找到所有是一类的点。
 200. Number of Islands 286. Walls and Gates  Dfs也可以用来实现有向图找环的策略，基本思路就是把图中的点标为白色（unvisited）,灰色(visiting)，黑色(visited)。如果在访问途中遇到灰色的节点，就说明这个点被访问过了，图中有环。
Union find 这类题目一般都是存在多个点属于一个类别的题目，之后可以通过图的关系把这些点合并到一个类别里面。union find 可以用来找无向图中是否有环。基本算法如下：
class DSU { int[] parent; public DSU(int N) { parent = new int[N]; for (int i = 0; i &amp;lt; N; ++i) parent[i] = i; } public int find(int x) { if (parent[x] !</description>
    </item>
    
    <item>
      <title>Array算法题的思考</title>
      <link>http://study.tczhong.com/post/algo/array/</link>
      <pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>http://study.tczhong.com/post/algo/array/</guid>
      <description>Array 算法题的思考 数组类的算法是在我做的题目中是最多的，相对来说也是最好理解的它也可以包罗万象，使用各种各样的算法。用数组可以实现很多基本的数据结构。比如heap。所以这部分需要好好掌握。
SWAP 需要应用到数组元素交换是一类非常常见的题目，比如说求最大的K个数，这种题目一般都是使用基本的快速排序思想。也就是说，我们把这个数组分成两部分，一部分是比当前这个数字大的，另外一部分是比这个当前数字小的，这样我们可以快速的把一个array分成两部分，然后再分别对这两部分进行处理。
如果只是需要移动一些数字，比如说移动零或者整个数组只有三个数，那么可以用一些更简单思想，比如说记录下所有非0的数，或者记录下这些数字的个数，然后把前面全换成这些非0数，后面换成零。这样做的好处就是不需要交换。或者一个记录非0的地方，另外一个记录当前位置，如果这个不是零，那么就遇上一个非0的东西交换。所以总体思路都是双指针的思想，一个记录当前遍历的位置，另外一个记录上一次符合条件的位置。
 27. Remove Element 75. Sort Colors 283. Move Zeroes 215. Kth Largest Element in an Array  subarray 这又是一大类数组常遇到的题目，比如说求子数组的和，或者判断这个子数组是否符合某些规律等等。与字符串处理substring有异曲同工之妙，一般也都是双指针，如果发现和大于某个值的时候，那么就把起始值增大。
另外一种常见的思路就是记录从零开始到现在的子序列的和。然后，用当前的和减去目标值，然后看这个值是否在我们存好的hashmap里，如果在的话就说明存在这么个序列，我们就可以返回这个值。这类题目需要先判断有没有，再加入map，避免0的问题。当限制subarray长度时也可以用两个数字代表，不使用hashtable。
对于求max average的题目，可以使用binary search找这个最大的average，思路不是很直接。就是直接找这个值，然后看存不存在符合的subarray.
其中一个有趣的地方是可以用加法代替乘法，换成log。
 53. Maximum Subarray 325. Maximum Size Subarray Sum Equals k 209. Minimum Size Subarray Sum 560. Subarray Sum Equals K 643. Maximum Average Subarray I 644. Maximum Average Subarray II 713. Subarray Product Less Than K  对于subarray个数的题目可以一般有这个思路： - 1，2 中subarray个数为[1],[2],[1,2] - 1,2,3 中subarray个数为[1],[2],[1,2],[1,3],[2,3],[1,2,3]</description>
    </item>
    
    <item>
      <title>String算法题的思考</title>
      <link>http://study.tczhong.com/post/algo/string/</link>
      <pubDate>Wed, 22 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>http://study.tczhong.com/post/algo/string/</guid>
      <description>String 算法思考 String 类型的题目算是leetcode里第二多的题型，其实这个和array的使用方法差不太多，只不过其中有一些特定的使用场景。我在这里会将string分为几类问题，可能不能包括所有的类别，尽量使用较为统一的思路解释遇到的题目。
数据类型 首先要说清楚一点，在java中String是immutable的，也就是当你创建一个string后是不能修改的，如果你需要给他加内容，java会重新创一个新的实例。这样的问题就是如果使用s+=a,这样时间复杂度是O(n),在java中会重新复制一遍string再给你创建。
解决办法就是使用StringBuilder，这个的时间复杂度对于增加就是O(1).其中内部实现就是一个char[]
 sb.append(String str) sb.toString()  组合问题 这类问题就是需要得到某个字符串中包含的所有子集,或者是permutation.这类题日非常相似，需要找出符合条件的所有组合。基本思路是样的，可以使用DFS与backtrack实现。例如 Combination Sum,可以把这题变成一个子问题选择了数字n后，求解sum-n的子问题的解答。所以可以先排序选择第一个元素，然后在函数中记录以下这些：
 结果列表 当前路径存入的值， 所有可能的值 剩余的Sum 当前选择的位置,深度  在执行递归前将数字存入，在执行后从数组中删去。如果是计算permutation, 在参种增加一个数组用来判断当前数字是否访过。类似的题目有以下这些：
 17. Letter Combinations of a Phone Number 282. Expression Add Operators 39. Combination Sum 40. Combination Sum II 78. Subsets 79. Word Search 46. Permutations 47. Permutations II 266. Palindrome Permutation 267. Palindrome Permutation II 494. Target Sum 679. 24 Game 491. Increasing Subsequences  对于subset的题目，可以用以下的思路.</description>
    </item>
    
    <item>
      <title>树形算法题的思考</title>
      <link>http://study.tczhong.com/post/algo/tree/</link>
      <pubDate>Tue, 21 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>http://study.tczhong.com/post/algo/tree/</guid>
      <description>树形算法题的思考 树形是一大题型，这类题目相对来说比较简单，在我看来掌握树形的最大要点就是递归的思想，这可以说用在了这类题目中的方方面面。主要涉及这些题型：
 构建树（数组，链表） 遍历，判断是合理的树 找节点（LCA） 树的基本属性（高度），找路径  构建树 这类题目的基本思路就是先找到根结点（root），然后把整个数组或者链表分成左右两个部分。之后，这个根节点的左子树就是递归调用数组的右半部分。右半边子树就是递归调用，这个函数的右半部分。总体还是比较简单的，题目可以参看
 108.Convert Sorted Array to Binary Search Tree 109.Convert Sorted List to Binary Search Tree  这里有一道题，关于如何利用链表来构造。其中有一点，它可以使用一个固定的prev linked list node。在每次递归结束的时候都会调用next，这样我们就不需要每次遍历找到中心结点，而是利用之前的结果来找到中间的那个节点。也就是说，在这里我们并不需要一开始就把父节点找到，而是可以先存好左子树，之后再到root。
private ListNode list; private TreeNode sortedListToBST(int start, int end) { if (start &amp;gt; end) return null; int mid = (start + end+1) / 2; TreeNode leftChild = sortedListToBST(start, mid-1); TreeNode parent = new TreeNode(list.val); parent.left = leftChild; list = list.</description>
    </item>
    
    <item>
      <title>学习</title>
      <link>http://study.tczhong.com/post/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/</link>
      <pubDate>Thu, 28 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>http://study.tczhong.com/post/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/</guid>
      <description>学习方法 学习的原因 人学习的原因是为了获得更多的知识，更加了解这个世界，并将它们使用在生活中使自己过得更好。所以对于我来说学习知识的意义就在于应用它们。透过学习，我们能够做到从未能做到的事情，重新认知这个世界及我们跟它的关系，以及扩展创造未来的能量。人们可以把认知过程分为6个阶段，即知识、理解、应用、分析、综合、评价。面对不同的学习领域，所需要达到的认知程度也是不同。对于某领域的专家那么就可以评价，而这个知识对于自己的生活关系不大时，只需达到第一个阶段即可。
另外成长型心智的人也会更加乐于学习。他们倾向于超越自己，往往会以自身进步为标准，常常处于尝试或探索状态，最终是自我解放，在不断学习中不断成长。
当今世界的发展速度太快，新的知识层出不穷，如果不持续学习，一直使用以前的方法，那么很有可能被他人淘汰。没有个人核心竞争力的话那终将被他人取代，这就是社会的残酷。而找寻个人特长的方法就是不断学习，走在他人的前面。
学习能力 学习能力的定义 学习能力或称专家精神的概括性行为表现：紧跟本专业内新知识、新技术动态，并运用到实际问题解决，能在本领域的研究项目中发挥主要作用，乐于分享知识经验。
 动机 (motives)：从动机上，学习能力强的人，必定是一个认知需求水平比较高的个体。一个认知需求高的个体，肯定是格物致知的人，必定在某些领域掌握更加精深或偏向原理性的基础知识，所以也许他的方向很偏，但总能分享一些这样的知识点，而且这些知识点不应该是松散的，而应该是聚焦莫一或某几个领域的。 个性特质 (traits)：从个性特质上，学习能力强的个体和一般的个体也是有差异的，比如爱钻研、爱看书。学习本身对他来说会比较容易，但更应看到的是，学习过程本身对这类人也是一种享受。 自我形象 (self-image)：学习能力好的人，绝对不是学过什么就扔一边的人， 他们优秀的学习动机和能力能使得他们成为一个领域的专家 社会角色 (social role, values)：一个学习能力强的人，是不会自己憋在肚子里“财不外露”的，而且大部分学习能力强的人遇到同一领域的共同爱好者，会倾囊相倒。因此，知识的分享，也是学习能力强的人的一种表现 经验 (experience)：你曾经成功迅速学习过哪门知识，掌握过什么能力与技巧？分享一下你之前所需的知识与技能吧（这块跟上面分享心得是有差异的）。这块实际上你就不用听内容，你就看他表情和语气语调以及呼吸频率等非语言线索，真正学习能力强并通过学习对工作有过帮助的人，会自如地侃侃而谈，看他讲话的感觉，肯定特享受。换句话说，这时候他的自我效能感爆棚，感觉这一亩三分地，自己就是真正的主人。 知识 (knowledge)：你知道你所从事职业的新兴思想潮流吗？你知道最新崛起的几位大家是谁吗？你能说说你最喜欢的职业领域几位大牛吗，能比较一下他们的成就和思想吗？作为面试官，那怕你面试的是个土木工程师而你对土木一窍不通也没关系，如果他在编，你就让他编，放心吧，一个人讲的时候的流畅程度和自信程度是装不出来的，如果没有点实在货，三句话就露怯。  学习知识的来源 我的学习的知识分为以下几大块：
 书籍：首先从知乎或者微信推送了解到这本书，之后在douban或者goodread看评价。如果比较经典那么我就会选择阅读，阅读的方式为kindle或者图书馆借阅。 知识分享类网站：知乎和quora 这上面有很多的大牛分享自己的知识。有的专业性很强，有的则是非常简单易懂。 资讯类网站：cnbeta 36氪，果壳等这些都是以新闻的方式让我了解世界最新的资讯 课堂与网络课堂：随着本科的结束，在学校内学习的时间变少，网上的课堂可以系统的讲解一个方面的知识。 媒体：TED，podcast，纪录片，电影。长视频的现在看的比较少，但这也是一个获得知识的很好的途径。很多内容制作比较精致。 人：身边的大牛也是我学习的榜样。从别人的思维方式到表达能力都是学习的好材料。  不同材料的学习方法 人的专注度是在随着时间下降的，所以在一段时间的工作后休息是必要的。
书籍 读书需要一定的步骤，目前我是读三遍书：
 区分书本的重要性，对于粗读的文科类，通俗类书本，快速读一遍。对于觉得好的段落进行折角，记录。对于需要精读的书则是很慢的阅读，尤其是理科类书籍，快速看就无法理解。 第二遍对于粗读的书则是只看折角的地方，勾画出有感处的句子。对于第一遍细读的书籍则是第二遍写书籍结构，包括重点。 第三遍做读书笔记，将有所感悟的段落写下，加上自己的见解。  在读书时注意自己不学习结论，而是学习他的思维方式！
课堂,mooc 对于课堂的知识学习可以使用SQ3R的方法：
 survey (skim background) question read recite (复述) review  在复习过后增加自我测试的环节也是很有必要的，可以使用anki或者做书本后面的练习。 另外由于遗忘曲线的存在，经常回看自己之前的总结也是很重要的：
 每一次都复习一下前一次的知识 第二天复习今日所学 中期测试自己掌握的程度，修改之后的学习策略  在复习考试时有一些建议：
 把自己沉浸在不同的来源的信息之中，可以加深理解。 做mind map，看清楚之间的结构 frequent revisit  讲座，人际沟通 在听讲座的时候，首先了解讲座的嘉宾的来历以及讲的话题的背景资料，然后从中想一些问题，在讲座中自己希望听到什么方面的知识。之后在听讲座时可以通过笔记的方式记录演讲者的主要观点。结束后可以对于感兴趣的部分查阅资料，形成自己的看法。</description>
    </item>
    
    <item>
      <title>运动</title>
      <link>http://study.tczhong.com/post/%E8%BF%90%E5%8A%A8/</link>
      <pubDate>Thu, 28 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>http://study.tczhong.com/post/%E8%BF%90%E5%8A%A8/</guid>
      <description>运动 运动的意义 运动对于人的各个方面都有一定的好处。从科学的角度来说，可以促进血液循环，增强心肺功能，提高身体免疫力。运动也可以帮助睡眠，保持好心情。当今社会，由于生产方式的改变，导致人们运动越来越少。但是从人的天性来说，有一定的运动量才符合人们的生物规律。一个好的身体也是工作的本钱，如果生一场大病那么你将无法完成任何事情。所以说适当的运动，对于人的各个方面都非常有用，你一定需要在日程中安排固定的时间来运动
运动的目标 运动的目标多种多样，我认为有以下几种目的：
 增加肌肉 减少脂肪 训练耐力 训练力量 塑造形体  每一种运动的目的都可以产生不同的运动计划和方法，弄清楚自己的训练目标非常重要。可以从以下三个方面来思考
A. 自我定位：
 我是什么样的体型， 这种体型有什么样的特点？ 我的身体素质和运动经验如何？  B. 理想目标（ 一定条件下， 有些目标可以并行） ：
 我想要更少的体脂含量， 让自己看起来更苗条？ 还是更健康的身体线条， 紧致身姿？ 或是更大的肌肉维度， 让自己硬朗阳刚？ 抑或是我想要更强的力量速度， 提高自己的运动表现？ 我有哪些部位需要雕琢？ 这些部位需要向什么样的方向改善？  C. 我手中可利用的资源：
 我的训练地点是哪， 有什么器械可利用？ 在健身房、 学校操场， 还是在家训练？ 我一周能用在健身上的时间是多少？ 怎么分配的？ 我饮食怎么安排？ 自己做饭还是在食堂吃？ 准备用健身补剂么？  思考完这些， 我们就可以着手安排最适合自己的训练计划。
运动计划的安排 A. 训练时间安排：
a. 一周要安排几次训练？ b. 这几次训练我都需要用多少时间？
B. 训练项目的具体安排：
a. 为了我的目标， 我要怎么安排训练项目？ b. 训练强度， 其中无氧运动要考虑重量、 次数、 组数、 间歇时间。 有氧运动要考虑速度、 阻力、 时间。</description>
    </item>
    
    <item>
      <title>时间管理</title>
      <link>http://study.tczhong.com/post/%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86/</link>
      <pubDate>Wed, 28 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>http://study.tczhong.com/post/%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86/</guid>
      <description>时间管理的意义 为什么我们需要管理时间？因为时间是唯一有限的资源，时间是一去不复返的，而其他的都可以再生。任何人都无法回到过去，每一分每一秒都是我们需要管理好的财富。俗话说时间就是金钱，金钱人们很少会乱花，对于大笔的开支都会仔细算计，有人甚至会做预算，计划好未来的开销。时间也是一样,把时间花在有意义的地方十分重要。
管理时间的目的就是为了实现自己人生的目标，所以找好自己人生的目标是第一步。你希望十年后，二十年后的你是怎样的呢？这个问题真的需要我们每个人好好思考一下。因为这个问题决定了你准备过一个怎样的生活。找到了人生目标之后就需要思考为了达成这个目标你需要做一些什么事情，不要做有悖于目标达成的事。这些安排可以是长期的，也可以是明天就可以开始做的事情。我认为管理时间的对象是任务、事项，而不是时间。时间只是我们做某件事情所需要花费的代价而已，管理好自己需要做的事情，也就是计划分配多少时间到这些事情之中。
再次阅读李笑来的《跟时间做朋友》，对于时间管理有新的想法。重中之重是明白积累的力量。
设立目标的一些注意事项 在设立目标的时候要知道自己的能力，注意可实现性。越不切实际的目标越不可能实现，你也会越早的放弃。一种好的方法就是事前验尸，思考可能导致自己失败的原因。假设你已经失败了，你可能在什么地方出错。
另外人们也不会对于未来的自己有一个清晰的认识，好的办法就是利用较短的时间间隔来思考，用30天而不是一个月，人们这样做会减少不少时间。原因是这样思考可以有一个更加清晰的认识，意识中会对这个长度认识更加深刻。
另外我们对于自己的行为的作用估计不足。对于真正有用的事情，我们总是高估它的作用。对于目标没有帮助的事情，我们总会低估他们对于我们的影响。对于自己的行为有错误的认识。解决办法就是养成复利的习惯，关注那一点点小习惯，使之产生累积效应。
时间的分类 一个人的时间可以分成以下几类 - 大块时间：2小时以上，可以完成当天重要的事情。如早起后到中午吃饭前的时间 - 零碎时间：时间的存储器。如在交通上花费的时间，洗衣服时的时间 - 固定时间：某段时间在某个时段内进行效果最好，把它固定下来。也就是每天都会做的事情的一段时间 - 安静时间：可以安静独处一个人思考的时间，一般是晚上。 - 弹性时间：在两三段工作后，安排弹性时间，来弥补以前没有完成的事情，留作用来调节的时间。10~20min
在公司的时间也可以分为： 1. 受上司支配的时间 2. 受组织支配的时间 3. 自己的时间
不同的时间分类有不同的方法，在制定计划安排这些时间时，首先需要了解好自己在不同时间段的表现，之后安排恰当的任务在制定的时间之中。人不可能一天之中都保持很高的效率，在自己效率较低时做一些机械的事情，如运动等，在大块时间的时候做一些重要的事情。
管理时间的方法 制定任务的方法 任务 可以将任务分成一下4类 有很多事情都是满足我们的长期目标，但是却不是很紧急。人们在安排自己的短期任务时，经常只注意这件事情是什么，忽略这件事情的长期价值和作用。所以有时我们的日程表会被紧急不重要的事情堆满，而那些长期的目标却无法达成。这时候就需要想想2/8法则,80%的结果是由20%的努力完成的。想想做这件事情对于自己和他人的影响，如果不重要，或者要求不高，那么完全可以忽略一些东西，将事情完成。虽说细节决定成败，但是不是每件事情都如此需要注重细节，如果不注意这一点，就会把不少时间花在没有意义的事情上，导致最后没有时间去做真正重要的事情。定下任务时想好我真的需要做吗？可以有其他人帮我做吗？减少一半时间做结果会如何？
在制定任务时思考好这件事情和自己的目标多大，有多少是一定要完成的。毕竟一天只有24h，可有效利用的时间其实也就10h一下，对于目标也要学会断舍离。想做的事情会很多，找好阶段目标很重要。
有了任务就需要确定自己的目标，利用SMART原则， - specific 具体的； - measurable 可测量的； - achievable 可实现的； - relevant 相关联的； - time bound 时间。
任务和目标是相辅相成的，如果没有目标，那么这个任务的实现结果就不好评估，达不到时间管理的目的。
任务列表 建立一个任务列表对于日程管理十分重要，把所有之后需要做的事情都放入日程列表之中，这是建立之后日历的基础。这个任务列表最好可以对你进行提醒，让你知道今天应该做什么。对于任务列表的分类不用太细，不同类别的任务利用标签即可，使用3种任务列表记录自己的待办事项： - to do 立刻去做的 - later 之后再去做 - watch 需要经常注意的事情
在管理任务的时候可以给自己建立一个inbox，有的时候会有突然出现的任务，但我们又不能及时分类，或者没必要分类。我们就可以把这个任务放在inbox里，以后再整理。
对于工作上的任务可以细分为三个类别，勉强可以完成，完成能力尚可以及精通的任务。对于精通的项目你可以想想自己能否再多做一点，当然这些也是你乐意去做的。对于尚可的项目则是思考我是否愿意在上面获得改进，从中挑选几样花时间增进技能。而对于勉强的内容可以考虑放弃或者交于他人，因为这是你不乐于做的而且会耗费大量时间。但是如果又是重要的，则要考虑能否换一种方式去执行或者思考能否与开心的事情结，把技能提升到尚可的阶段。
日历 日历是我们日程管理的体现，但是日历又不是那种非常死板的，有弹性时间也很重要。完全按照日历的安排去执行在实际操作中可以说是不可能的，所以需要我们安排好弹性时间以及没有完成任务的处理机制。
对于日程管理的还有一个分类方式，把日子分为自我日，关键日和事务日。自我日是把一天的时间给自己，用于提升自己，维护健康，照顾。关键日把工作聚焦于最关键的事务上，事务日是处理其他事务的日子，如清理杂物，购物，约会等等。这三种也可以两两结合。</description>
    </item>
    
    <item>
      <title>如何吃饭</title>
      <link>http://study.tczhong.com/post/%E8%86%B3%E9%A3%9F%E8%90%A5%E5%85%BB%E6%8C%87%E5%AF%BC/</link>
      <pubDate>Thu, 28 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://study.tczhong.com/post/%E8%86%B3%E9%A3%9F%E8%90%A5%E5%85%BB%E6%8C%87%E5%AF%BC/</guid>
      <description> 营养的种类 营养的意义 营养素在人体内的功能主要分为3个方面： 1. 供给能量和维持体温 2. 作为“建筑”材料构成和修补身体组织 3. 作为调节物质，维持机体的正常生命活动，如同机器中的润滑油一样
人体所需能量和营养素 能量 能量是维持人生命活动必不可少的部分，单位一般为千卡或千焦。1kcal=4.184kJ. 能量的消耗主要由以下4个方面
 基础代谢消耗 食物特殊动力作用，摄取营养而引起的能量消耗。蛋白质最强，其次是碳水化合物，最后是脂肪 体力活动的消耗 生长发育消耗的能量  碳水化合物，脂肪,蛋白质作为人体主要的产能营养素，表现不相同。每克脂肪产能量约为9kcal，每克碳水化合物和蛋白质约4kcal。膳食指南推荐三者比例为6.5:2.5:1
主要营养素    名称 作用 主要来源 备注     蛋白质 构成和修补人体组织，构成酶和抗体，供给能量 肝，蛋，瘦肉，豆制品，奶制品；含量中等的是谷类食物 蛋白质的消化率不同，动物性食物可达90%，植物性只有80%。   脂类 供给能量，构成一些重要的生理物质，供给必需脂肪酸，维持体温保护脏器，脂溶性维生素来源 烹调油，肥肉，肉类，芝麻松子花生    碳水化合物 主要能量来源，构成人体重要物质，增强肝脏解毒能力 谷物，薯类，豆类，坚果类，食糖。蔬菜水果有纤维素和果胶 淀粉是多糖，需分解为双糖（麦芽糖），再分解为可以直接吸收的单糖（葡萄糖）   钙 骨骼和牙齿，以离子形式在血液中 奶制品，虾皮，海带，豆制品 吃膳食纤维会不利于吸收   铁 血红蛋白，肝脾 动物肝脏，血，鱼肉    锌 促进生长发育，增进食欲，增强对于疾病的抵抗力 鲜牡蛎，肉蛋类    碘 甲状腺素 海带紫菜海鱼 甲状腺肿大和甲亢   维生素A 视网膜细胞，促进蛋白质合成，加强抵抗力 动物肝脏，奶油和蛋黄，红黄绿色蔬菜和水果    维生素D 促进钙磷在肠道中吸收 日光，皮肤会产生    水 主要生理过程的介质，运输营养素，调节体温，润滑 水，食物水，代谢水 健康成人2500ml   膳食纤维 促进肠蠕动，防止便秘 玉米，糙米，全麦粉，燕麦，干豆，蔬菜水果     中国居民膳食指南  食物多样，谷物为主 多吃蔬菜，水果和薯类（土豆，白薯，木薯等） 常吃奶类（100g），豆类或其制品（50g） 经常吃适量鱼、禽、蛋、瘦肉，少吃肥肉和荤油 食粮与体力活动要平衡，以保持适宜体重 吃清淡少盐的膳食 如饮酒，应限量 吃清洁卫生不变质的食物  膳食宝塔 食物加工和选择注意  淘米会损失维生素b1，洗的水温要低，次数要少 蒸面食营养损失少，面条营养损失较多 洗菜在流水中冲洗，不可在水中浸泡 红烧清炖肉类时，一些水溶性维生素和糖类，蛋白质融入水中，所以需要连汁带汤吃掉。炸食品严重破坏维生素  其他饮食技巧 聚餐减脂方法  聚会前2餐少吃 聚餐前几小时可增加一次训练 吃饭前15min喝两杯水 先吃蔬菜这类纤维含量高的 多给朋友加菜 遇油腻拿茶水涮，油的热量高 餐后大步走，后两餐少摄入  富有营养的食物 提升免疫力的  鸡汤 酸奶 鲑鱼，鲔鱼 大蒜 姜粉 含锌的食物 蔬菜和水果  </description>
    </item>
    
    <item>
      <title>文档写作</title>
      <link>http://study.tczhong.com/post/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3%E5%86%99%E4%BD%9C/</link>
      <pubDate>Tue, 28 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://study.tczhong.com/post/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3%E5%86%99%E4%BD%9C/</guid>
      <description>技术文档写作 1. 思想的组织 1.1 金字塔原理  结论先行：一篇文章只支持一个中心思想，这个中心思想将概括各级各组的所有观点，必须放在文章最开头。 以上统下： 上一层级的观点必须是对下一层级观点的概括，下一层级的观点是对上一层级观点的解释、支持。 归类分组：把具有共同点的观点归类分组，同一组中的观点都必须属于同一个范畴。 逻辑递进：每组中的观点都必须按照逻辑顺序进行组织。  1.2 序言 1.2.1 SQAC  S:背景 介绍读者熟悉的某些“背景” Q:疑问 由此引发读者最初的“疑问” A:回答 针对该“疑问”给出的“答案”，也就是文章的中心思想 C:冲突 说明发生的“冲突”  1.2.2 TOPS  Target to Audiences 有的放矢 内容面向读者，抓住读者的注意力 Overarching 贯穿整体 能够全面概括后面的内容 Powerful 掷地有声 有见解 Supportable 言之有据 有论点可以支撑  1.3 自上而下构建  提出中心思想 设想读者最初提问 写序言 与读者进行疑问、回答式对话  1.4 自下而上构建  列出想表达的所有观点 找出各观点之间的逻辑关系 概括总结，得出结论  1.5 归类分组  相互独立（ Mutually Exclusive）：同一组的各个观点之间必须相互独立、相互排斥，没有重叠。 完全穷尽（ Collectively Exhaustive ）：同一组的所有观点完全穷尽，没有遗漏。  1.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://study.tczhong.com/post/machinelearning/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://study.tczhong.com/post/machinelearning/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>http://study.tczhong.com/post/machinelearning/%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://study.tczhong.com/post/machinelearning/%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%AD%A6%E4%B9%A0/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>