<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>String on Learn More</title>
    <link>http://study.tczhong.com/tags/string/</link>
    <description>Recent content in String on Learn More</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 22 Aug 2018 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://study.tczhong.com/tags/string/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>String算法题的思考</title>
      <link>http://study.tczhong.com/post/algo/string/</link>
      <pubDate>Wed, 22 Aug 2018 00:00:00 +0000</pubDate>
      <guid>http://study.tczhong.com/post/algo/string/</guid>
      <description>&lt;h1 id=&#34;string-算法思考&#34;&gt;String 算法思考&lt;/h1&gt;&#xA;&lt;p&gt;String 类型的题目算是leetcode里第二多的题型，其实这个和array的使用方法差不太多，只不过其中有一些特定的使用场景。我在这里会将string分为几类问题，可能不能包括所有的类别，尽量使用较为统一的思路解释遇到的题目。&lt;/p&gt;&#xA;&lt;h2 id=&#34;数据类型&#34;&gt;数据类型&lt;/h2&gt;&#xA;&lt;p&gt;首先要说清楚一点，在java中String是immutable的，也就是当你创建一个string后是不能修改的，如果你需要给他加内容，java会重新创一个新的实例。这样的问题就是如果使用&lt;code&gt;s+=a&lt;/code&gt;,这样时间复杂度是O(n),在java中会重新复制一遍string再给你创建。&lt;/p&gt;&#xA;&lt;p&gt;解决办法就是使用StringBuilder，这个的时间复杂度对于增加就是O(1).其中内部实现就是一个char[]&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;sb.append(String str)&lt;/li&gt;&#xA;&lt;li&gt;sb.toString()&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;组合问题&#34;&gt;组合问题&lt;/h2&gt;&#xA;&lt;p&gt;这类问题就是需要得到某个字符串中包含的所有子集,或者是permutation.这类题日非常相似，需要找出符合条件的所有组合。基本思路是样的，可以使用DFS与backtrack实现。例如&#xA;Combination Sum,可以把这题变成一个子问题选择了数字n后，求解sum-n的子问题的解答。所以可以先排序选择第一个元素，然后在函数中记录以下这些：&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
